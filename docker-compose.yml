version: "3.4"


# NOTE: This _has _to start with `x-`
x-logging: &default-logging
  options:
    max-size: "20k"
    max-file: "10"

services:
  django:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    command: gunicorn dbtscheduler.wsgi:application -b :8000 -b :80 --reload

    env_file: .env
    volumes:
      - ./src/backend:/app
      - ./src/frontend/build:/frontend:cached
    ports:
      - 8000:8000
      - 80:80
    stdin_open: true
    tty: true
    logging: *default-logging

  builder:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    command: npm run start
    env_file: .env
    environment:
      - HOST=0.0.0.0
    ports:
      - 3000:3000
    volumes:
      - ./src/frontend:/app:cached
      # This _deletes_ the node_modules/ host volume folder in docker, so it uses the docker image
      # node_modules/ -- if you modify yarn.lock you'll need to build the docker image again.
      - /app/node_modules
    depends_on:
      - django
    logging: *default-logging
  redis:
    image: redis
    ports:
        - 6379:6379
    logging:
        options:
            max-size: "20k"
            max-file: "10"

 #-----------------------------------------------
  #   Celery Service
  #-----------------------------------------------
  celery-worker:
    command: celery -A dbtscheduler worker -l info
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    depends_on:
      - redis
      - django
    env_file: .env
    volumes:
      - ./src/backend:/app
    restart: unless-stopped
    logging:
      options:
        max-size: "20k"
        max-file: "10"
  celery-beat:
    command: celery -A dbtscheduler beat -l info 
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    links:
    - celery-worker
    - redis
    depends_on:
    - celery-worker
    - redis
    env_file: .env
    volumes:
      - ./src/backend:/app
    restart: unless-stopped
    logging:
      options:
        max-size: "20k"
        max-file: "10"


volumes:
    myapp:
